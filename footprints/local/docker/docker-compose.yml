# DOCKER COMPOSE CONFIGURATION

services:

  ## INFRASTRUCTURE SERVICES

  ### PROMETHEUS
  prometheus:
    image: prom/prometheus:v3.4.2
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    ports:
      - 9090:9090

  node-exporter:
    image: quay.io/prometheus/node-exporter:master
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always

  ### GRAFANA
  grafana:
    image: grafana/grafana:12.0.2
    ports:
      - 3000:3000
    restart: always
    env_file:
      - ./monitoring/grafana.env

  ### DATABASE
  archivist-db:
    image: mysql:8.4.5
    privileged: true
    ports:
      - 3307:3306
    restart: always
    env_file:
      - ./mysql/archivist.env
    volumes:
      - archivist-db-data:/var/lib/mysql

  butler-db:
    image: mysql:8.4.5
    privileged: true
    ports:
      - 3306:3306
    restart: always
    env_file:
      - ./mysql/butler.env
    volumes:
      - butler-db-data:/var/lib/mysql

  ### DATABASE ADMINISTRATION
  db-admin:
    image: adminer:5.3.0
    ports:
      - 5050:8080
    restart: always


  ## NEFLIX OSS, SUPPORT SERVICES

  ### CONFIGURATION MANAGEMENT
  config-service:
    image: cftoolsuite/config-server
    ports:
      - 8888:8888
    env_file:
      - ./config/hoover-config.env
    environment:
      - DOCKER_IP=$DOCKER_IP
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - JAVA_OPTS=-Xmx2g -XX:+UseG1GC -XX:+UseStringDeduplication
      - MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED=true
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW-DETAILS=always
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=info,jars,health,heapdump,threaddump,metrics,pom,scheduledtasks,loggers,mappings,prometheus
      - SERVER_PORT=8888

  ### EUREKA, DISCOVERY
  discovery-service:
    image: cftoolsuite/discovery-service
    ports:
      - 8761:8761
    environment:
      - DOCKER_IP=$DOCKER_IP
      - EUREKA_CLIENT_REGISTER-WITH-EUREKA=false
      - EUREKA_CLIENT_FETCH-REGISTRY=false
      - JAVA_OPTS=-Xmx2g -XX:+UseG1GC -XX:+UseStringDeduplication
      - MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED=true
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW-DETAILS=always
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=info,jars,health,heapdump,threaddump,metrics,pom,scheduledtasks,loggers,mappings,prometheus
      - SPRING_APPLICATION_NAME=discovery-service


  ## SPRING BOOT SERVICE ADMINISTRATION
  springboot-admin:
    image: cftoolsuite/microservices-console
    ports:
      - 5555:5555
    environment:
      - DOCKER_IP=$DOCKER_IP
      - EUREKA_INSTANCE_HEALTH-CHECK-URL-PATH=/actuator/health
      - EUREKA_INSTANCE_PREFER-IP-ADDRESS=true
      - EUREKA_CLIENT_REGISTER-WITH-EUREKA=true
      - EUREKA_CLIENT_FETCH-REGISTRY=true
      - EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service:8761/eureka/
      - EUREKA_CLIENT_HEALTHCHECK_ENABLED=true
      - JAVA_OPTS=-Xmx1g -XX:+UseG1GC -XX:+UseStringDeduplication
      - INFO_TAGS_SECURITY=insecure
      - MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED=true
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW-DETAILS=always
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=env,info,jars,health,heapdump,threaddump,metrics,pom,scheduledtasks,loggers,mappings,prometheus
      - SERVER_PORT=5555
      - SERVER_COMPRESSION_ENABLED=true
      - SPRING_APPLICATION_NAME=microservices-console
      - SPRING_CLOUD_DISCOVERY_ENABLED=true
      - SPRING_JACKSON_SERIALIZATION_INDENT-OUTPUT=true
      - SPRING_PROFILES_ACTIVE=insecure

volumes:
  archivist-db-data: { }
  butler-db-data: { }
  prometheus_data: { }